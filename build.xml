<?xml version="1.0"?>
<project name="Freenet installer" default="dist" basedir=".">
	<description>
This file builds the freenet installer...
	</description>

	<property name="config" value="install.xml"/>
	<property name="dest" value="install.jar"/>
	<property name="build" value="build"/>

	<property name="izPack.lib" value="lib/standalone-compiler.jar"/>
	<property name="launch4j.dir" location="lib/launch4j/" />

	<available file="${izPack.lib}" property="izPack_available" />
	<available file="${launch4j.dir}" property="launch4j_available" />

	<!-- ================================================== -->

	<target name="check-izpack">
		<fail unless="izPack_available" status="1"
			message="You need to download izPack and to put standalone-compiler.jar into lib/" />
	</target>

	<target name="check-launch4j">
		<fail unless="launch4j_available" status="1"
			message="You need to download launch4j and to put it into lib/" />
	</target>

	<target name="dist" description="generate the distribution" depends="compile, check-izpack">
		<echo message="Build the installer"/>
		<taskdef name="izpack" classpath="${izPack.lib}" classname="com.izforge.izpack.ant.IzPackTask"/>
		<izpack input="${config}" output="${dest}" baseDir="${basedir}"/>
	</target>

	<target name="win32" depends="dist, check-launch4j">
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar
		    :${launch4j.dir}/lib/xstream.jar" />
		<launch4j configFile="./l4j/installer.xml" />
	</target>

	<!-- ================================================== -->
	<target name="clean" description="Delete the installer">
		<delete file="${dest}"/>
		<delete dir="${build}"/>
		<delete dir="${build}_sha1test"/>
		<delete dir="${build}_browser"/>
		<delete dir="${build}_uncompress"/>
		<delete dir="${build}_bindtest"/>
	</target>

	<target name="compile" depends="compile_sha1test, compile_browser, compile_uncompress, compile_bindtest"/>

	<target name="compile_sha1test" unless="skip_sha1test">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->

		<mkdir dir="${build}_sha1test"/>
		<javac srcdir="./src" destdir="./${build}_sha1test" optimize="on" debug="on" source="1.5">
			<include name="gnu/**/*.java"/>
			<include name="freenet/support/HexUtil"/>
			<include name="Sha1Test.java"/>
		</javac>
		<jar jarfile="./res/bin/sha1test.jar" basedir="./${build}_sha1test">
			<manifest>
				<attribute name="Main-Class" value="Sha1Test"/>
			</manifest>
		</jar>
	</target>

	<target name="compile_browser">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->

		<mkdir dir="${build}_browser"/>
		<javac srcdir="./src" destdir="./${build}_browser" optimize="on" debug="on" source="1.5">
			<include name="BareBonesBrowserLaunch.java"/>
		</javac>
		<jar jarfile="./res/bin/browser.jar" basedir="./${build}_browser">
			<manifest>
				<attribute name="Main-Class" value="BareBonesBrowserLaunch"/>
			</manifest>
		</jar>
	</target>

	<target name="compile_uncompress">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->

		<mkdir dir="${build}_uncompress"/>
		<javac srcdir="./src" destdir="./${build}_uncompress" optimize="on" debug="on" source="1.5">
			<include name="Uncompress.java"/>
		</javac>
		<jar jarfile="./res/bin/uncompress.jar" basedir="./${build}_uncompress">
			<manifest>
				<attribute name="Main-Class" value="Uncompress$Test"/>
			</manifest>
		</jar>
	</target>

	<target name="compile_bindtest">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->

		<mkdir dir="${build}_bindtest"/>
		<javac srcdir="./src" destdir="./${build}_bindtest" optimize="on" debug="on" source="1.5">
			<include name="BindTest.java"/>
		</javac>
		<jar jarfile="./res/bin/bindtest.jar" basedir="./${build}_bindtest">
			<manifest>
				<attribute name="Main-Class" value="BindTest"/>
			</manifest>
		</jar>
	</target>

</project>
